Найдите в интернете информацию про класс java.util.Optional.
Для чего применяются объекты этого класса?

- При написании кода разработчик часто не может знать — будет ли
существовать нужный объект на момент исполнения программы или нет,
и в таких случаях приходится делать проверки на null. Если такими
проверками пренебречь, то рано или поздно (обычно рано) Ваша
программа рухнет с NullPointerException.
Для этого был придуман новый класс Optional.

Какие два состояния могут быть у объектов этого класса?

- Класс Optional может содержать объект, а может содержать null.

Как создаются экземпляры данного класса?

- import java.util.Optional;

Как можно проверить в каком состоянии находится экземпляр данного класса?

- Optional<User> user = Optional.of(repository.findById(userId));

Как можно получить объект, который находится внутри Optional?

    - Optional.of — возвращает Optional-объект.
    - Optional.ofNullable - возвращает Optional-объект,
    а если нет дженерик - объекта, возвращает пустой Optional-объект.
    - Optional.empty — возвращает пустой Optional-объект.
